// Copyright (c) 2011 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is automatically generated.

#ifndef UI_GFX_GL_GL_BINDINGS_AUTOGEN_GL_H_
#define UI_GFX_GL_GL_BINDINGS_AUTOGEN_GL_H_

namespace gfx {

void InitializeGLBindingsGL();
void InitializeDebugGLBindingsGL();

typedef void (GL_BINDING_CALL *glActiveTextureProc)(GLenum texture);
typedef void (GL_BINDING_CALL *glAttachShaderProc)(GLuint program, GLuint shader);
typedef void (GL_BINDING_CALL *glBindAttribLocationProc)(GLuint program, GLuint index, const char* name);
typedef void (GL_BINDING_CALL *glBindBufferProc)(GLenum target, GLuint buffer);
typedef void (GL_BINDING_CALL *glBindFragDataLocationProc)(GLuint program, GLuint colorNumber, const char* name);
typedef void (GL_BINDING_CALL *glBindFragDataLocationIndexedARBProc)(GLuint program, GLuint colorNumber, GLuint index, const char* name);
typedef void (GL_BINDING_CALL *glBindFramebufferEXTProc)(GLenum target, GLuint framebuffer);
typedef void (GL_BINDING_CALL *glBindRenderbufferEXTProc)(GLenum target, GLuint renderbuffer);
typedef void (GL_BINDING_CALL *glBindTextureProc)(GLenum target, GLuint texture);
typedef void (GL_BINDING_CALL *glBlendColorProc)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
typedef void (GL_BINDING_CALL *glBlendEquationProc)( GLenum mode );
typedef void (GL_BINDING_CALL *glBlendEquationSeparateProc)(GLenum modeRGB, GLenum modeAlpha);
typedef void (GL_BINDING_CALL *glBlendFuncProc)(GLenum sfactor, GLenum dfactor);
typedef void (GL_BINDING_CALL *glBlendFuncSeparateProc)(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
typedef void (GL_BINDING_CALL *glBlitFramebufferEXTProc)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GL_BINDING_CALL *glBlitFramebufferANGLEProc)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (GL_BINDING_CALL *glBufferDataProc)(GLenum target, GLsizei size, const void* data, GLenum usage);
typedef void (GL_BINDING_CALL *glBufferSubDataProc)(GLenum target, GLint offset, GLsizei size, const void* data);
typedef GLenum (GL_BINDING_CALL *glCheckFramebufferStatusEXTProc)(GLenum target);
typedef void (GL_BINDING_CALL *glClearProc)(GLbitfield mask);
typedef void (GL_BINDING_CALL *glClearColorProc)(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
typedef void (GL_BINDING_CALL *glClearDepthProc)(GLclampd depth);
typedef void (GL_BINDING_CALL *glClearDepthfProc)(GLclampf depth);
typedef void (GL_BINDING_CALL *glClearStencilProc)(GLint s);
typedef void (GL_BINDING_CALL *glColorMaskProc)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
typedef void (GL_BINDING_CALL *glCompileShaderProc)(GLuint shader);
typedef void (GL_BINDING_CALL *glCompressedTexImage2DProc)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void* data);
typedef void (GL_BINDING_CALL *glCompressedTexSubImage2DProc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void* data);
typedef void (GL_BINDING_CALL *glCopyTexImage2DProc)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
typedef void (GL_BINDING_CALL *glCopyTexSubImage2DProc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
typedef GLuint (GL_BINDING_CALL *glCreateProgramProc)(void);
typedef GLuint (GL_BINDING_CALL *glCreateShaderProc)(GLenum type);
typedef void (GL_BINDING_CALL *glCullFaceProc)(GLenum mode);
typedef void (GL_BINDING_CALL *glDeleteBuffersARBProc)(GLsizei n, const GLuint* buffers);
typedef void (GL_BINDING_CALL *glDeleteFramebuffersEXTProc)(GLsizei n, const GLuint* framebuffers);
typedef void (GL_BINDING_CALL *glDeleteProgramProc)(GLuint program);
typedef void (GL_BINDING_CALL *glDeleteRenderbuffersEXTProc)(GLsizei n, const GLuint* renderbuffers);
typedef void (GL_BINDING_CALL *glDeleteShaderProc)(GLuint shader);
typedef void (GL_BINDING_CALL *glDeleteTexturesProc)(GLsizei n, const GLuint* textures);
typedef void (GL_BINDING_CALL *glDepthFuncProc)(GLenum func);
typedef void (GL_BINDING_CALL *glDepthMaskProc)(GLboolean flag);
typedef void (GL_BINDING_CALL *glDepthRangeProc)(GLclampd zNear, GLclampd zFar);
typedef void (GL_BINDING_CALL *glDepthRangefProc)(GLclampf zNear, GLclampf zFar);
typedef void (GL_BINDING_CALL *glDetachShaderProc)(GLuint program, GLuint shader);
typedef void (GL_BINDING_CALL *glDisableProc)(GLenum cap);
typedef void (GL_BINDING_CALL *glDisableVertexAttribArrayProc)(GLuint index);
typedef void (GL_BINDING_CALL *glDrawArraysProc)(GLenum mode, GLint first, GLsizei count);
typedef void (GL_BINDING_CALL *glDrawBufferProc)(GLenum mode);
typedef void (GL_BINDING_CALL *glDrawBuffersARBProc)(GLsizei n, const GLenum* bufs);
typedef void (GL_BINDING_CALL *glDrawElementsProc)(GLenum mode, GLsizei count, GLenum type, const void* indices);
typedef void (GL_BINDING_CALL *glEGLImageTargetTexture2DOESProc)(GLenum target, GLeglImageOES image);
typedef void (GL_BINDING_CALL *glEnableProc)(GLenum cap);
typedef void (GL_BINDING_CALL *glEnableVertexAttribArrayProc)(GLuint index);
typedef void (GL_BINDING_CALL *glFinishProc)(void);
typedef void (GL_BINDING_CALL *glFlushProc)(void);
typedef void (GL_BINDING_CALL *glFramebufferRenderbufferEXTProc)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (GL_BINDING_CALL *glFramebufferTexture2DEXTProc)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (GL_BINDING_CALL *glFrontFaceProc)(GLenum mode);
typedef void (GL_BINDING_CALL *glGenBuffersARBProc)(GLsizei n, GLuint* buffers);
typedef void (GL_BINDING_CALL *glGenerateMipmapEXTProc)(GLenum target);
typedef void (GL_BINDING_CALL *glGenFramebuffersEXTProc)(GLsizei n, GLuint* framebuffers);
typedef void (GL_BINDING_CALL *glGenRenderbuffersEXTProc)(GLsizei n, GLuint* renderbuffers);
typedef void (GL_BINDING_CALL *glGenTexturesProc)(GLsizei n, GLuint* textures);
typedef void (GL_BINDING_CALL *glGetActiveAttribProc)(GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, char* name);
typedef void (GL_BINDING_CALL *glGetActiveUniformProc)(GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, char* name);
typedef void (GL_BINDING_CALL *glGetAttachedShadersProc)(GLuint program, GLsizei maxcount, GLsizei* count, GLuint* shaders);
typedef GLint (GL_BINDING_CALL *glGetAttribLocationProc)(GLuint program, const char* name);
typedef void (GL_BINDING_CALL *glGetBooleanvProc)(GLenum pname, GLboolean* params);
typedef void (GL_BINDING_CALL *glGetBufferParameterivProc)(GLenum target, GLenum pname, GLint* params);
typedef GLenum (GL_BINDING_CALL *glGetErrorProc)(void);
typedef void (GL_BINDING_CALL *glGetFloatvProc)(GLenum pname, GLfloat* params);
typedef void (GL_BINDING_CALL *glGetFramebufferAttachmentParameterivEXTProc)(GLenum target, GLenum attachment, GLenum pname, GLint* params);
typedef GLenum (GL_BINDING_CALL *glGetGraphicsResetStatusARBProc)(void);
typedef void (GL_BINDING_CALL *glGetIntegervProc)(GLenum pname, GLint* params);
typedef void (GL_BINDING_CALL *glGetProgramivProc)(GLuint program, GLenum pname, GLint* params);
typedef void (GL_BINDING_CALL *glGetProgramInfoLogProc)(GLuint program, GLsizei bufsize, GLsizei* length, char* infolog);
typedef void (GL_BINDING_CALL *glGetRenderbufferParameterivEXTProc)(GLenum target, GLenum pname, GLint* params);
typedef void (GL_BINDING_CALL *glGetShaderivProc)(GLuint shader, GLenum pname, GLint* params);
typedef void (GL_BINDING_CALL *glGetShaderInfoLogProc)(GLuint shader, GLsizei bufsize, GLsizei* length, char* infolog);
typedef void (GL_BINDING_CALL *glGetShaderPrecisionFormatProc)(GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);
typedef void (GL_BINDING_CALL *glGetShaderSourceProc)(GLuint shader, GLsizei bufsize, GLsizei* length, char* source);
typedef const GLubyte* (GL_BINDING_CALL *glGetStringProc)(GLenum name);
typedef void (GL_BINDING_CALL *glGetTexLevelParameterfvProc)(GLenum target, GLint level, GLenum pname, GLfloat* params);
typedef void (GL_BINDING_CALL *glGetTexLevelParameterivProc)(GLenum target, GLint level, GLenum pname, GLint* params);
typedef void (GL_BINDING_CALL *glGetTexParameterfvProc)(GLenum target, GLenum pname, GLfloat* params);
typedef void (GL_BINDING_CALL *glGetTexParameterivProc)(GLenum target, GLenum pname, GLint* params);
typedef void (GL_BINDING_CALL *glGetTranslatedShaderSourceANGLEProc)(GLuint shader, GLsizei bufsize, GLsizei* length, char* source);
typedef void (GL_BINDING_CALL *glGetUniformfvProc)(GLuint program, GLint location, GLfloat* params);
typedef void (GL_BINDING_CALL *glGetUniformivProc)(GLuint program, GLint location, GLint* params);
typedef GLint (GL_BINDING_CALL *glGetUniformLocationProc)(GLuint program, const char* name);
typedef void (GL_BINDING_CALL *glGetVertexAttribfvProc)(GLuint index, GLenum pname, GLfloat* params);
typedef void (GL_BINDING_CALL *glGetVertexAttribivProc)(GLuint index, GLenum pname, GLint* params);
typedef void (GL_BINDING_CALL *glGetVertexAttribPointervProc)(GLuint index, GLenum pname, void** pointer);
typedef void (GL_BINDING_CALL *glHintProc)(GLenum target, GLenum mode);
typedef GLboolean (GL_BINDING_CALL *glIsBufferProc)(GLuint buffer);
typedef GLboolean (GL_BINDING_CALL *glIsEnabledProc)(GLenum cap);
typedef GLboolean (GL_BINDING_CALL *glIsFramebufferEXTProc)(GLuint framebuffer);
typedef GLboolean (GL_BINDING_CALL *glIsProgramProc)(GLuint program);
typedef GLboolean (GL_BINDING_CALL *glIsRenderbufferEXTProc)(GLuint renderbuffer);
typedef GLboolean (GL_BINDING_CALL *glIsShaderProc)(GLuint shader);
typedef GLboolean (GL_BINDING_CALL *glIsTextureProc)(GLuint texture);
typedef void (GL_BINDING_CALL *glLineWidthProc)(GLfloat width);
typedef void (GL_BINDING_CALL *glLinkProgramProc)(GLuint program);
typedef void* (GL_BINDING_CALL *glMapBufferProc)(GLenum target, GLenum access);
typedef void (GL_BINDING_CALL *glPixelStoreiProc)(GLenum pname, GLint param);
typedef void (GL_BINDING_CALL *glPolygonOffsetProc)(GLfloat factor, GLfloat units);
typedef void (GL_BINDING_CALL *glReadBufferProc)(GLenum src);
typedef void (GL_BINDING_CALL *glReadPixelsProc)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void* pixels);
typedef void (GL_BINDING_CALL *glReleaseShaderCompilerProc)(void);
typedef void (GL_BINDING_CALL *glRenderbufferStorageMultisampleEXTProc)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GL_BINDING_CALL *glRenderbufferStorageMultisampleANGLEProc)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GL_BINDING_CALL *glRenderbufferStorageEXTProc)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (GL_BINDING_CALL *glSampleCoverageProc)(GLclampf value, GLboolean invert);
typedef void (GL_BINDING_CALL *glScissorProc)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GL_BINDING_CALL *glShaderBinaryProc)(GLsizei n, const GLuint* shaders, GLenum binaryformat, const void* binary, GLsizei length);
typedef void (GL_BINDING_CALL *glShaderSourceProc)(GLuint shader, GLsizei count, const char** str, const GLint* length);
typedef void (GL_BINDING_CALL *glStencilFuncProc)(GLenum func, GLint ref, GLuint mask);
typedef void (GL_BINDING_CALL *glStencilFuncSeparateProc)(GLenum face, GLenum func, GLint ref, GLuint mask);
typedef void (GL_BINDING_CALL *glStencilMaskProc)(GLuint mask);
typedef void (GL_BINDING_CALL *glStencilMaskSeparateProc)(GLenum face, GLuint mask);
typedef void (GL_BINDING_CALL *glStencilOpProc)(GLenum fail, GLenum zfail, GLenum zpass);
typedef void (GL_BINDING_CALL *glStencilOpSeparateProc)(GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
typedef void (GL_BINDING_CALL *glTexImage2DProc)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void* pixels);
typedef void (GL_BINDING_CALL *glTexParameterfProc)(GLenum target, GLenum pname, GLfloat param);
typedef void (GL_BINDING_CALL *glTexParameterfvProc)(GLenum target, GLenum pname, const GLfloat* params);
typedef void (GL_BINDING_CALL *glTexParameteriProc)(GLenum target, GLenum pname, GLint param);
typedef void (GL_BINDING_CALL *glTexParameterivProc)(GLenum target, GLenum pname, const GLint* params);
typedef void (GL_BINDING_CALL *glTexSubImage2DProc)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void* pixels);
typedef void (GL_BINDING_CALL *glUniform1fProc)(GLint location, GLfloat x);
typedef void (GL_BINDING_CALL *glUniform1fvProc)(GLint location, GLsizei count, const GLfloat* v);
typedef void (GL_BINDING_CALL *glUniform1iProc)(GLint location, GLint x);
typedef void (GL_BINDING_CALL *glUniform1ivProc)(GLint location, GLsizei count, const GLint* v);
typedef void (GL_BINDING_CALL *glUniform2fProc)(GLint location, GLfloat x, GLfloat y);
typedef void (GL_BINDING_CALL *glUniform2fvProc)(GLint location, GLsizei count, const GLfloat* v);
typedef void (GL_BINDING_CALL *glUniform2iProc)(GLint location, GLint x, GLint y);
typedef void (GL_BINDING_CALL *glUniform2ivProc)(GLint location, GLsizei count, const GLint* v);
typedef void (GL_BINDING_CALL *glUniform3fProc)(GLint location, GLfloat x, GLfloat y, GLfloat z);
typedef void (GL_BINDING_CALL *glUniform3fvProc)(GLint location, GLsizei count, const GLfloat* v);
typedef void (GL_BINDING_CALL *glUniform3iProc)(GLint location, GLint x, GLint y, GLint z);
typedef void (GL_BINDING_CALL *glUniform3ivProc)(GLint location, GLsizei count, const GLint* v);
typedef void (GL_BINDING_CALL *glUniform4fProc)(GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GL_BINDING_CALL *glUniform4fvProc)(GLint location, GLsizei count, const GLfloat* v);
typedef void (GL_BINDING_CALL *glUniform4iProc)(GLint location, GLint x, GLint y, GLint z, GLint w);
typedef void (GL_BINDING_CALL *glUniform4ivProc)(GLint location, GLsizei count, const GLint* v);
typedef void (GL_BINDING_CALL *glUniformMatrix2fvProc)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (GL_BINDING_CALL *glUniformMatrix3fvProc)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef void (GL_BINDING_CALL *glUniformMatrix4fvProc)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
typedef GLboolean (GL_BINDING_CALL *glUnmapBufferProc)(GLenum target);
typedef void (GL_BINDING_CALL *glUseProgramProc)(GLuint program);
typedef void (GL_BINDING_CALL *glValidateProgramProc)(GLuint program);
typedef void (GL_BINDING_CALL *glVertexAttrib1fProc)(GLuint indx, GLfloat x);
typedef void (GL_BINDING_CALL *glVertexAttrib1fvProc)(GLuint indx, const GLfloat* values);
typedef void (GL_BINDING_CALL *glVertexAttrib2fProc)(GLuint indx, GLfloat x, GLfloat y);
typedef void (GL_BINDING_CALL *glVertexAttrib2fvProc)(GLuint indx, const GLfloat* values);
typedef void (GL_BINDING_CALL *glVertexAttrib3fProc)(GLuint indx, GLfloat x, GLfloat y, GLfloat z);
typedef void (GL_BINDING_CALL *glVertexAttrib3fvProc)(GLuint indx, const GLfloat* values);
typedef void (GL_BINDING_CALL *glVertexAttrib4fProc)(GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (GL_BINDING_CALL *glVertexAttrib4fvProc)(GLuint indx, const GLfloat* values);
typedef void (GL_BINDING_CALL *glVertexAttribPointerProc)(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void* ptr);
typedef void (GL_BINDING_CALL *glViewportProc)(GLint x, GLint y, GLsizei width, GLsizei height);
typedef void (GL_BINDING_CALL *glGenFencesNVProc)(GLsizei n, GLuint* fences);
typedef void (GL_BINDING_CALL *glDeleteFencesNVProc)(GLsizei n, const GLuint* fences);
typedef void (GL_BINDING_CALL *glSetFenceNVProc)(GLuint fence, GLenum condition);
typedef GLboolean (GL_BINDING_CALL *glTestFenceNVProc)(GLuint fence);
typedef void (GL_BINDING_CALL *glFinishFenceNVProc)(GLuint fence);
typedef GLboolean (GL_BINDING_CALL *glIsFenceNVProc)(GLuint fence);
typedef void (GL_BINDING_CALL *glGetFenceivNVProc)(GLuint fence, GLenum pname, GLint* params);

GL_EXPORT extern glActiveTextureProc g_glActiveTexture;
GL_EXPORT extern glAttachShaderProc g_glAttachShader;
GL_EXPORT extern glBindAttribLocationProc g_glBindAttribLocation;
GL_EXPORT extern glBindBufferProc g_glBindBuffer;
GL_EXPORT extern glBindFragDataLocationProc g_glBindFragDataLocation;
GL_EXPORT extern glBindFragDataLocationIndexedARBProc g_glBindFragDataLocationIndexedARB;
GL_EXPORT extern glBindFramebufferEXTProc g_glBindFramebufferEXT;
GL_EXPORT extern glBindRenderbufferEXTProc g_glBindRenderbufferEXT;
GL_EXPORT extern glBindTextureProc g_glBindTexture;
GL_EXPORT extern glBlendColorProc g_glBlendColor;
GL_EXPORT extern glBlendEquationProc g_glBlendEquation;
GL_EXPORT extern glBlendEquationSeparateProc g_glBlendEquationSeparate;
GL_EXPORT extern glBlendFuncProc g_glBlendFunc;
GL_EXPORT extern glBlendFuncSeparateProc g_glBlendFuncSeparate;
GL_EXPORT extern glBlitFramebufferEXTProc g_glBlitFramebufferEXT;
GL_EXPORT extern glBlitFramebufferANGLEProc g_glBlitFramebufferANGLE;
GL_EXPORT extern glBufferDataProc g_glBufferData;
GL_EXPORT extern glBufferSubDataProc g_glBufferSubData;
GL_EXPORT extern glCheckFramebufferStatusEXTProc g_glCheckFramebufferStatusEXT;
GL_EXPORT extern glClearProc g_glClear;
GL_EXPORT extern glClearColorProc g_glClearColor;
GL_EXPORT extern glClearDepthProc g_glClearDepth;
GL_EXPORT extern glClearDepthfProc g_glClearDepthf;
GL_EXPORT extern glClearStencilProc g_glClearStencil;
GL_EXPORT extern glColorMaskProc g_glColorMask;
GL_EXPORT extern glCompileShaderProc g_glCompileShader;
GL_EXPORT extern glCompressedTexImage2DProc g_glCompressedTexImage2D;
GL_EXPORT extern glCompressedTexSubImage2DProc g_glCompressedTexSubImage2D;
GL_EXPORT extern glCopyTexImage2DProc g_glCopyTexImage2D;
GL_EXPORT extern glCopyTexSubImage2DProc g_glCopyTexSubImage2D;
GL_EXPORT extern glCreateProgramProc g_glCreateProgram;
GL_EXPORT extern glCreateShaderProc g_glCreateShader;
GL_EXPORT extern glCullFaceProc g_glCullFace;
GL_EXPORT extern glDeleteBuffersARBProc g_glDeleteBuffersARB;
GL_EXPORT extern glDeleteFramebuffersEXTProc g_glDeleteFramebuffersEXT;
GL_EXPORT extern glDeleteProgramProc g_glDeleteProgram;
GL_EXPORT extern glDeleteRenderbuffersEXTProc g_glDeleteRenderbuffersEXT;
GL_EXPORT extern glDeleteShaderProc g_glDeleteShader;
GL_EXPORT extern glDeleteTexturesProc g_glDeleteTextures;
GL_EXPORT extern glDepthFuncProc g_glDepthFunc;
GL_EXPORT extern glDepthMaskProc g_glDepthMask;
GL_EXPORT extern glDepthRangeProc g_glDepthRange;
GL_EXPORT extern glDepthRangefProc g_glDepthRangef;
GL_EXPORT extern glDetachShaderProc g_glDetachShader;
GL_EXPORT extern glDisableProc g_glDisable;
GL_EXPORT extern glDisableVertexAttribArrayProc g_glDisableVertexAttribArray;
GL_EXPORT extern glDrawArraysProc g_glDrawArrays;
GL_EXPORT extern glDrawBufferProc g_glDrawBuffer;
GL_EXPORT extern glDrawBuffersARBProc g_glDrawBuffersARB;
GL_EXPORT extern glDrawElementsProc g_glDrawElements;
GL_EXPORT extern glEGLImageTargetTexture2DOESProc g_glEGLImageTargetTexture2DOES;
GL_EXPORT extern glEnableProc g_glEnable;
GL_EXPORT extern glEnableVertexAttribArrayProc g_glEnableVertexAttribArray;
GL_EXPORT extern glFinishProc g_glFinish;
GL_EXPORT extern glFlushProc g_glFlush;
GL_EXPORT extern glFramebufferRenderbufferEXTProc g_glFramebufferRenderbufferEXT;
GL_EXPORT extern glFramebufferTexture2DEXTProc g_glFramebufferTexture2DEXT;
GL_EXPORT extern glFrontFaceProc g_glFrontFace;
GL_EXPORT extern glGenBuffersARBProc g_glGenBuffersARB;
GL_EXPORT extern glGenerateMipmapEXTProc g_glGenerateMipmapEXT;
GL_EXPORT extern glGenFramebuffersEXTProc g_glGenFramebuffersEXT;
GL_EXPORT extern glGenRenderbuffersEXTProc g_glGenRenderbuffersEXT;
GL_EXPORT extern glGenTexturesProc g_glGenTextures;
GL_EXPORT extern glGetActiveAttribProc g_glGetActiveAttrib;
GL_EXPORT extern glGetActiveUniformProc g_glGetActiveUniform;
GL_EXPORT extern glGetAttachedShadersProc g_glGetAttachedShaders;
GL_EXPORT extern glGetAttribLocationProc g_glGetAttribLocation;
GL_EXPORT extern glGetBooleanvProc g_glGetBooleanv;
GL_EXPORT extern glGetBufferParameterivProc g_glGetBufferParameteriv;
GL_EXPORT extern glGetErrorProc g_glGetError;
GL_EXPORT extern glGetFloatvProc g_glGetFloatv;
GL_EXPORT extern glGetFramebufferAttachmentParameterivEXTProc g_glGetFramebufferAttachmentParameterivEXT;
GL_EXPORT extern glGetGraphicsResetStatusARBProc g_glGetGraphicsResetStatusARB;
GL_EXPORT extern glGetIntegervProc g_glGetIntegerv;
GL_EXPORT extern glGetProgramivProc g_glGetProgramiv;
GL_EXPORT extern glGetProgramInfoLogProc g_glGetProgramInfoLog;
GL_EXPORT extern glGetRenderbufferParameterivEXTProc g_glGetRenderbufferParameterivEXT;
GL_EXPORT extern glGetShaderivProc g_glGetShaderiv;
GL_EXPORT extern glGetShaderInfoLogProc g_glGetShaderInfoLog;
GL_EXPORT extern glGetShaderPrecisionFormatProc g_glGetShaderPrecisionFormat;
GL_EXPORT extern glGetShaderSourceProc g_glGetShaderSource;
GL_EXPORT extern glGetStringProc g_glGetString;
GL_EXPORT extern glGetTexLevelParameterfvProc g_glGetTexLevelParameterfv;
GL_EXPORT extern glGetTexLevelParameterivProc g_glGetTexLevelParameteriv;
GL_EXPORT extern glGetTexParameterfvProc g_glGetTexParameterfv;
GL_EXPORT extern glGetTexParameterivProc g_glGetTexParameteriv;
GL_EXPORT extern glGetTranslatedShaderSourceANGLEProc g_glGetTranslatedShaderSourceANGLE;
GL_EXPORT extern glGetUniformfvProc g_glGetUniformfv;
GL_EXPORT extern glGetUniformivProc g_glGetUniformiv;
GL_EXPORT extern glGetUniformLocationProc g_glGetUniformLocation;
GL_EXPORT extern glGetVertexAttribfvProc g_glGetVertexAttribfv;
GL_EXPORT extern glGetVertexAttribivProc g_glGetVertexAttribiv;
GL_EXPORT extern glGetVertexAttribPointervProc g_glGetVertexAttribPointerv;
GL_EXPORT extern glHintProc g_glHint;
GL_EXPORT extern glIsBufferProc g_glIsBuffer;
GL_EXPORT extern glIsEnabledProc g_glIsEnabled;
GL_EXPORT extern glIsFramebufferEXTProc g_glIsFramebufferEXT;
GL_EXPORT extern glIsProgramProc g_glIsProgram;
GL_EXPORT extern glIsRenderbufferEXTProc g_glIsRenderbufferEXT;
GL_EXPORT extern glIsShaderProc g_glIsShader;
GL_EXPORT extern glIsTextureProc g_glIsTexture;
GL_EXPORT extern glLineWidthProc g_glLineWidth;
GL_EXPORT extern glLinkProgramProc g_glLinkProgram;
GL_EXPORT extern glMapBufferProc g_glMapBuffer;
GL_EXPORT extern glPixelStoreiProc g_glPixelStorei;
GL_EXPORT extern glPolygonOffsetProc g_glPolygonOffset;
GL_EXPORT extern glReadBufferProc g_glReadBuffer;
GL_EXPORT extern glReadPixelsProc g_glReadPixels;
GL_EXPORT extern glReleaseShaderCompilerProc g_glReleaseShaderCompiler;
GL_EXPORT extern glRenderbufferStorageMultisampleEXTProc g_glRenderbufferStorageMultisampleEXT;
GL_EXPORT extern glRenderbufferStorageMultisampleANGLEProc g_glRenderbufferStorageMultisampleANGLE;
GL_EXPORT extern glRenderbufferStorageEXTProc g_glRenderbufferStorageEXT;
GL_EXPORT extern glSampleCoverageProc g_glSampleCoverage;
GL_EXPORT extern glScissorProc g_glScissor;
GL_EXPORT extern glShaderBinaryProc g_glShaderBinary;
GL_EXPORT extern glShaderSourceProc g_glShaderSource;
GL_EXPORT extern glStencilFuncProc g_glStencilFunc;
GL_EXPORT extern glStencilFuncSeparateProc g_glStencilFuncSeparate;
GL_EXPORT extern glStencilMaskProc g_glStencilMask;
GL_EXPORT extern glStencilMaskSeparateProc g_glStencilMaskSeparate;
GL_EXPORT extern glStencilOpProc g_glStencilOp;
GL_EXPORT extern glStencilOpSeparateProc g_glStencilOpSeparate;
GL_EXPORT extern glTexImage2DProc g_glTexImage2D;
GL_EXPORT extern glTexParameterfProc g_glTexParameterf;
GL_EXPORT extern glTexParameterfvProc g_glTexParameterfv;
GL_EXPORT extern glTexParameteriProc g_glTexParameteri;
GL_EXPORT extern glTexParameterivProc g_glTexParameteriv;
GL_EXPORT extern glTexSubImage2DProc g_glTexSubImage2D;
GL_EXPORT extern glUniform1fProc g_glUniform1f;
GL_EXPORT extern glUniform1fvProc g_glUniform1fv;
GL_EXPORT extern glUniform1iProc g_glUniform1i;
GL_EXPORT extern glUniform1ivProc g_glUniform1iv;
GL_EXPORT extern glUniform2fProc g_glUniform2f;
GL_EXPORT extern glUniform2fvProc g_glUniform2fv;
GL_EXPORT extern glUniform2iProc g_glUniform2i;
GL_EXPORT extern glUniform2ivProc g_glUniform2iv;
GL_EXPORT extern glUniform3fProc g_glUniform3f;
GL_EXPORT extern glUniform3fvProc g_glUniform3fv;
GL_EXPORT extern glUniform3iProc g_glUniform3i;
GL_EXPORT extern glUniform3ivProc g_glUniform3iv;
GL_EXPORT extern glUniform4fProc g_glUniform4f;
GL_EXPORT extern glUniform4fvProc g_glUniform4fv;
GL_EXPORT extern glUniform4iProc g_glUniform4i;
GL_EXPORT extern glUniform4ivProc g_glUniform4iv;
GL_EXPORT extern glUniformMatrix2fvProc g_glUniformMatrix2fv;
GL_EXPORT extern glUniformMatrix3fvProc g_glUniformMatrix3fv;
GL_EXPORT extern glUniformMatrix4fvProc g_glUniformMatrix4fv;
GL_EXPORT extern glUnmapBufferProc g_glUnmapBuffer;
GL_EXPORT extern glUseProgramProc g_glUseProgram;
GL_EXPORT extern glValidateProgramProc g_glValidateProgram;
GL_EXPORT extern glVertexAttrib1fProc g_glVertexAttrib1f;
GL_EXPORT extern glVertexAttrib1fvProc g_glVertexAttrib1fv;
GL_EXPORT extern glVertexAttrib2fProc g_glVertexAttrib2f;
GL_EXPORT extern glVertexAttrib2fvProc g_glVertexAttrib2fv;
GL_EXPORT extern glVertexAttrib3fProc g_glVertexAttrib3f;
GL_EXPORT extern glVertexAttrib3fvProc g_glVertexAttrib3fv;
GL_EXPORT extern glVertexAttrib4fProc g_glVertexAttrib4f;
GL_EXPORT extern glVertexAttrib4fvProc g_glVertexAttrib4fv;
GL_EXPORT extern glVertexAttribPointerProc g_glVertexAttribPointer;
GL_EXPORT extern glViewportProc g_glViewport;
GL_EXPORT extern glGenFencesNVProc g_glGenFencesNV;
GL_EXPORT extern glDeleteFencesNVProc g_glDeleteFencesNV;
GL_EXPORT extern glSetFenceNVProc g_glSetFenceNV;
GL_EXPORT extern glTestFenceNVProc g_glTestFenceNV;
GL_EXPORT extern glFinishFenceNVProc g_glFinishFenceNV;
GL_EXPORT extern glIsFenceNVProc g_glIsFenceNV;
GL_EXPORT extern glGetFenceivNVProc g_glGetFenceivNV;

}  // namespace gfx

#define glActiveTexture ::gfx::g_glActiveTexture
#define glAttachShader ::gfx::g_glAttachShader
#define glBindAttribLocation ::gfx::g_glBindAttribLocation
#define glBindBuffer ::gfx::g_glBindBuffer
#define glBindFragDataLocation ::gfx::g_glBindFragDataLocation
#define glBindFragDataLocationIndexedARB ::gfx::g_glBindFragDataLocationIndexedARB
#define glBindFramebufferEXT ::gfx::g_glBindFramebufferEXT
#define glBindRenderbufferEXT ::gfx::g_glBindRenderbufferEXT
#define glBindTexture ::gfx::g_glBindTexture
#define glBlendColor ::gfx::g_glBlendColor
#define glBlendEquation ::gfx::g_glBlendEquation
#define glBlendEquationSeparate ::gfx::g_glBlendEquationSeparate
#define glBlendFunc ::gfx::g_glBlendFunc
#define glBlendFuncSeparate ::gfx::g_glBlendFuncSeparate
#define glBlitFramebufferEXT ::gfx::g_glBlitFramebufferEXT
#define glBlitFramebufferANGLE ::gfx::g_glBlitFramebufferANGLE
#define glBufferData ::gfx::g_glBufferData
#define glBufferSubData ::gfx::g_glBufferSubData
#define glCheckFramebufferStatusEXT ::gfx::g_glCheckFramebufferStatusEXT
#define glClear ::gfx::g_glClear
#define glClearColor ::gfx::g_glClearColor
#define glClearDepth ::gfx::g_glClearDepth
#define glClearDepthf ::gfx::g_glClearDepthf
#define glClearStencil ::gfx::g_glClearStencil
#define glColorMask ::gfx::g_glColorMask
#define glCompileShader ::gfx::g_glCompileShader
#define glCompressedTexImage2D ::gfx::g_glCompressedTexImage2D
#define glCompressedTexSubImage2D ::gfx::g_glCompressedTexSubImage2D
#define glCopyTexImage2D ::gfx::g_glCopyTexImage2D
#define glCopyTexSubImage2D ::gfx::g_glCopyTexSubImage2D
#define glCreateProgram ::gfx::g_glCreateProgram
#define glCreateShader ::gfx::g_glCreateShader
#define glCullFace ::gfx::g_glCullFace
#define glDeleteBuffersARB ::gfx::g_glDeleteBuffersARB
#define glDeleteFramebuffersEXT ::gfx::g_glDeleteFramebuffersEXT
#define glDeleteProgram ::gfx::g_glDeleteProgram
#define glDeleteRenderbuffersEXT ::gfx::g_glDeleteRenderbuffersEXT
#define glDeleteShader ::gfx::g_glDeleteShader
#define glDeleteTextures ::gfx::g_glDeleteTextures
#define glDepthFunc ::gfx::g_glDepthFunc
#define glDepthMask ::gfx::g_glDepthMask
#define glDepthRange ::gfx::g_glDepthRange
#define glDepthRangef ::gfx::g_glDepthRangef
#define glDetachShader ::gfx::g_glDetachShader
#define glDisable ::gfx::g_glDisable
#define glDisableVertexAttribArray ::gfx::g_glDisableVertexAttribArray
#define glDrawArrays ::gfx::g_glDrawArrays
#define glDrawBuffer ::gfx::g_glDrawBuffer
#define glDrawBuffersARB ::gfx::g_glDrawBuffersARB
#define glDrawElements ::gfx::g_glDrawElements
#define glEGLImageTargetTexture2DOES ::gfx::g_glEGLImageTargetTexture2DOES
#define glEnable ::gfx::g_glEnable
#define glEnableVertexAttribArray ::gfx::g_glEnableVertexAttribArray
#define glFinish ::gfx::g_glFinish
#define glFlush ::gfx::g_glFlush
#define glFramebufferRenderbufferEXT ::gfx::g_glFramebufferRenderbufferEXT
#define glFramebufferTexture2DEXT ::gfx::g_glFramebufferTexture2DEXT
#define glFrontFace ::gfx::g_glFrontFace
#define glGenBuffersARB ::gfx::g_glGenBuffersARB
#define glGenerateMipmapEXT ::gfx::g_glGenerateMipmapEXT
#define glGenFramebuffersEXT ::gfx::g_glGenFramebuffersEXT
#define glGenRenderbuffersEXT ::gfx::g_glGenRenderbuffersEXT
#define glGenTextures ::gfx::g_glGenTextures
#define glGetActiveAttrib ::gfx::g_glGetActiveAttrib
#define glGetActiveUniform ::gfx::g_glGetActiveUniform
#define glGetAttachedShaders ::gfx::g_glGetAttachedShaders
#define glGetAttribLocation ::gfx::g_glGetAttribLocation
#define glGetBooleanv ::gfx::g_glGetBooleanv
#define glGetBufferParameteriv ::gfx::g_glGetBufferParameteriv
#define glGetError ::gfx::g_glGetError
#define glGetFloatv ::gfx::g_glGetFloatv
#define glGetFramebufferAttachmentParameterivEXT ::gfx::g_glGetFramebufferAttachmentParameterivEXT
#define glGetGraphicsResetStatusARB ::gfx::g_glGetGraphicsResetStatusARB
#define glGetIntegerv ::gfx::g_glGetIntegerv
#define glGetProgramiv ::gfx::g_glGetProgramiv
#define glGetProgramInfoLog ::gfx::g_glGetProgramInfoLog
#define glGetRenderbufferParameterivEXT ::gfx::g_glGetRenderbufferParameterivEXT
#define glGetShaderiv ::gfx::g_glGetShaderiv
#define glGetShaderInfoLog ::gfx::g_glGetShaderInfoLog
#define glGetShaderPrecisionFormat ::gfx::g_glGetShaderPrecisionFormat
#define glGetShaderSource ::gfx::g_glGetShaderSource
#define glGetString ::gfx::g_glGetString
#define glGetTexLevelParameterfv ::gfx::g_glGetTexLevelParameterfv
#define glGetTexLevelParameteriv ::gfx::g_glGetTexLevelParameteriv
#define glGetTexParameterfv ::gfx::g_glGetTexParameterfv
#define glGetTexParameteriv ::gfx::g_glGetTexParameteriv
#define glGetTranslatedShaderSourceANGLE ::gfx::g_glGetTranslatedShaderSourceANGLE
#define glGetUniformfv ::gfx::g_glGetUniformfv
#define glGetUniformiv ::gfx::g_glGetUniformiv
#define glGetUniformLocation ::gfx::g_glGetUniformLocation
#define glGetVertexAttribfv ::gfx::g_glGetVertexAttribfv
#define glGetVertexAttribiv ::gfx::g_glGetVertexAttribiv
#define glGetVertexAttribPointerv ::gfx::g_glGetVertexAttribPointerv
#define glHint ::gfx::g_glHint
#define glIsBuffer ::gfx::g_glIsBuffer
#define glIsEnabled ::gfx::g_glIsEnabled
#define glIsFramebufferEXT ::gfx::g_glIsFramebufferEXT
#define glIsProgram ::gfx::g_glIsProgram
#define glIsRenderbufferEXT ::gfx::g_glIsRenderbufferEXT
#define glIsShader ::gfx::g_glIsShader
#define glIsTexture ::gfx::g_glIsTexture
#define glLineWidth ::gfx::g_glLineWidth
#define glLinkProgram ::gfx::g_glLinkProgram
#define glMapBuffer ::gfx::g_glMapBuffer
#define glPixelStorei ::gfx::g_glPixelStorei
#define glPolygonOffset ::gfx::g_glPolygonOffset
#define glReadBuffer ::gfx::g_glReadBuffer
#define glReadPixels ::gfx::g_glReadPixels
#define glReleaseShaderCompiler ::gfx::g_glReleaseShaderCompiler
#define glRenderbufferStorageMultisampleEXT ::gfx::g_glRenderbufferStorageMultisampleEXT
#define glRenderbufferStorageMultisampleANGLE ::gfx::g_glRenderbufferStorageMultisampleANGLE
#define glRenderbufferStorageEXT ::gfx::g_glRenderbufferStorageEXT
#define glSampleCoverage ::gfx::g_glSampleCoverage
#define glScissor ::gfx::g_glScissor
#define glShaderBinary ::gfx::g_glShaderBinary
#define glShaderSource ::gfx::g_glShaderSource
#define glStencilFunc ::gfx::g_glStencilFunc
#define glStencilFuncSeparate ::gfx::g_glStencilFuncSeparate
#define glStencilMask ::gfx::g_glStencilMask
#define glStencilMaskSeparate ::gfx::g_glStencilMaskSeparate
#define glStencilOp ::gfx::g_glStencilOp
#define glStencilOpSeparate ::gfx::g_glStencilOpSeparate
#define glTexImage2D ::gfx::g_glTexImage2D
#define glTexParameterf ::gfx::g_glTexParameterf
#define glTexParameterfv ::gfx::g_glTexParameterfv
#define glTexParameteri ::gfx::g_glTexParameteri
#define glTexParameteriv ::gfx::g_glTexParameteriv
#define glTexSubImage2D ::gfx::g_glTexSubImage2D
#define glUniform1f ::gfx::g_glUniform1f
#define glUniform1fv ::gfx::g_glUniform1fv
#define glUniform1i ::gfx::g_glUniform1i
#define glUniform1iv ::gfx::g_glUniform1iv
#define glUniform2f ::gfx::g_glUniform2f
#define glUniform2fv ::gfx::g_glUniform2fv
#define glUniform2i ::gfx::g_glUniform2i
#define glUniform2iv ::gfx::g_glUniform2iv
#define glUniform3f ::gfx::g_glUniform3f
#define glUniform3fv ::gfx::g_glUniform3fv
#define glUniform3i ::gfx::g_glUniform3i
#define glUniform3iv ::gfx::g_glUniform3iv
#define glUniform4f ::gfx::g_glUniform4f
#define glUniform4fv ::gfx::g_glUniform4fv
#define glUniform4i ::gfx::g_glUniform4i
#define glUniform4iv ::gfx::g_glUniform4iv
#define glUniformMatrix2fv ::gfx::g_glUniformMatrix2fv
#define glUniformMatrix3fv ::gfx::g_glUniformMatrix3fv
#define glUniformMatrix4fv ::gfx::g_glUniformMatrix4fv
#define glUnmapBuffer ::gfx::g_glUnmapBuffer
#define glUseProgram ::gfx::g_glUseProgram
#define glValidateProgram ::gfx::g_glValidateProgram
#define glVertexAttrib1f ::gfx::g_glVertexAttrib1f
#define glVertexAttrib1fv ::gfx::g_glVertexAttrib1fv
#define glVertexAttrib2f ::gfx::g_glVertexAttrib2f
#define glVertexAttrib2fv ::gfx::g_glVertexAttrib2fv
#define glVertexAttrib3f ::gfx::g_glVertexAttrib3f
#define glVertexAttrib3fv ::gfx::g_glVertexAttrib3fv
#define glVertexAttrib4f ::gfx::g_glVertexAttrib4f
#define glVertexAttrib4fv ::gfx::g_glVertexAttrib4fv
#define glVertexAttribPointer ::gfx::g_glVertexAttribPointer
#define glViewport ::gfx::g_glViewport
#define glGenFencesNV ::gfx::g_glGenFencesNV
#define glDeleteFencesNV ::gfx::g_glDeleteFencesNV
#define glSetFenceNV ::gfx::g_glSetFenceNV
#define glTestFenceNV ::gfx::g_glTestFenceNV
#define glFinishFenceNV ::gfx::g_glFinishFenceNV
#define glIsFenceNV ::gfx::g_glIsFenceNV
#define glGetFenceivNV ::gfx::g_glGetFenceivNV

#endif  //  UI_GFX_GL_GL_BINDINGS_AUTOGEN_GL_H_
