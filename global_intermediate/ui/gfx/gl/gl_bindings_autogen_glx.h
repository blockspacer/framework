// Copyright (c) 2011 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is automatically generated.

#ifndef UI_GFX_GL_GL_BINDINGS_AUTOGEN_GLX_H_
#define UI_GFX_GL_GL_BINDINGS_AUTOGEN_GLX_H_

namespace gfx {

void InitializeGLBindingsGLX();
void InitializeDebugGLBindingsGLX();

typedef XVisualInfo* (GL_BINDING_CALL *glXChooseVisualProc)(Display* dpy, int screen, int* attribList);
typedef GLXContext (GL_BINDING_CALL *glXCreateContextProc)(Display* dpy, XVisualInfo* vis, GLXContext shareList, int direct);
typedef void (GL_BINDING_CALL *glXBindTexImageEXTProc)(Display* dpy, GLXDrawable drawable, int buffer, int* attribList);
typedef void (GL_BINDING_CALL *glXReleaseTexImageEXTProc)(Display* dpy, GLXDrawable drawable, int buffer);
typedef void (GL_BINDING_CALL *glXDestroyContextProc)(Display* dpy, GLXContext ctx);
typedef int (GL_BINDING_CALL *glXMakeCurrentProc)(Display* dpy, GLXDrawable drawable, GLXContext ctx);
typedef void (GL_BINDING_CALL *glXCopyContextProc)(Display* dpy, GLXContext src, GLXContext dst, unsigned long mask);
typedef void (GL_BINDING_CALL *glXSwapBuffersProc)(Display* dpy, GLXDrawable drawable);
typedef GLXPixmap (GL_BINDING_CALL *glXCreateGLXPixmapProc)(Display* dpy, XVisualInfo* visual, Pixmap pixmap);
typedef void (GL_BINDING_CALL *glXDestroyGLXPixmapProc)(Display* dpy, GLXPixmap pixmap);
typedef int (GL_BINDING_CALL *glXQueryExtensionProc)(Display* dpy, int* errorb, int* event);
typedef int (GL_BINDING_CALL *glXQueryVersionProc)(Display* dpy, int* maj, int* min);
typedef int (GL_BINDING_CALL *glXIsDirectProc)(Display* dpy, GLXContext ctx);
typedef int (GL_BINDING_CALL *glXGetConfigProc)(Display* dpy, XVisualInfo* visual, int attrib, int* value);
typedef GLXContext (GL_BINDING_CALL *glXGetCurrentContextProc)(void);
typedef GLXDrawable (GL_BINDING_CALL *glXGetCurrentDrawableProc)(void);
typedef void (GL_BINDING_CALL *glXWaitGLProc)(void);
typedef void (GL_BINDING_CALL *glXWaitXProc)(void);
typedef void (GL_BINDING_CALL *glXUseXFontProc)(Font font, int first, int count, int list);
typedef const char* (GL_BINDING_CALL *glXQueryExtensionsStringProc)(Display* dpy, int screen);
typedef const char* (GL_BINDING_CALL *glXQueryServerStringProc)(Display* dpy, int screen, int name);
typedef const char* (GL_BINDING_CALL *glXGetClientStringProc)(Display* dpy, int name);
typedef Display* (GL_BINDING_CALL *glXGetCurrentDisplayProc)(void);
typedef GLXFBConfig* (GL_BINDING_CALL *glXChooseFBConfigProc)(Display* dpy, int screen, const int* attribList, int* nitems);
typedef int (GL_BINDING_CALL *glXGetFBConfigAttribProc)(Display* dpy, GLXFBConfig config, int attribute, int* value);
typedef GLXFBConfig* (GL_BINDING_CALL *glXGetFBConfigsProc)(Display* dpy, int screen, int* nelements);
typedef XVisualInfo* (GL_BINDING_CALL *glXGetVisualFromFBConfigProc)(Display* dpy, GLXFBConfig config);
typedef GLXWindow (GL_BINDING_CALL *glXCreateWindowProc)(Display* dpy, GLXFBConfig config, Window win, const int* attribList);
typedef void (GL_BINDING_CALL *glXDestroyWindowProc)(Display* dpy, GLXWindow window);
typedef GLXPixmap (GL_BINDING_CALL *glXCreatePixmapProc)(Display* dpy, GLXFBConfig config, Pixmap pixmap, const int* attribList);
typedef void (GL_BINDING_CALL *glXDestroyPixmapProc)(Display* dpy, GLXPixmap pixmap);
typedef GLXPbuffer (GL_BINDING_CALL *glXCreatePbufferProc)(Display* dpy, GLXFBConfig config, const int* attribList);
typedef void (GL_BINDING_CALL *glXDestroyPbufferProc)(Display* dpy, GLXPbuffer pbuf);
typedef void (GL_BINDING_CALL *glXQueryDrawableProc)(Display* dpy, GLXDrawable draw, int attribute, unsigned int* value);
typedef GLXContext (GL_BINDING_CALL *glXCreateNewContextProc)(Display* dpy, GLXFBConfig config, int renderType, GLXContext shareList, int direct);
typedef int (GL_BINDING_CALL *glXMakeContextCurrentProc)(Display* dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx);
typedef GLXDrawable (GL_BINDING_CALL *glXGetCurrentReadDrawableProc)(void);
typedef int (GL_BINDING_CALL *glXQueryContextProc)(Display* dpy, GLXContext ctx, int attribute, int* value);
typedef void (GL_BINDING_CALL *glXSelectEventProc)(Display* dpy, GLXDrawable drawable, unsigned long mask);
typedef void (GL_BINDING_CALL *glXGetSelectedEventProc)(Display* dpy, GLXDrawable drawable, unsigned long* mask);
typedef void (GL_BINDING_CALL *glXSwapIntervalEXTProc)(Display* dpy, GLXDrawable drawable, int interval);
typedef GLXFBConfig (GL_BINDING_CALL *glXGetFBConfigFromVisualSGIXProc)(Display* dpy, XVisualInfo* visualInfo);
typedef GLXContext (GL_BINDING_CALL *glXCreateContextAttribsARBProc)(Display* dpy, GLXFBConfig config, GLXContext share_context, int direct, const int* attrib_list);

GL_EXPORT extern glXChooseVisualProc g_glXChooseVisual;
GL_EXPORT extern glXCreateContextProc g_glXCreateContext;
GL_EXPORT extern glXBindTexImageEXTProc g_glXBindTexImageEXT;
GL_EXPORT extern glXReleaseTexImageEXTProc g_glXReleaseTexImageEXT;
GL_EXPORT extern glXDestroyContextProc g_glXDestroyContext;
GL_EXPORT extern glXMakeCurrentProc g_glXMakeCurrent;
GL_EXPORT extern glXCopyContextProc g_glXCopyContext;
GL_EXPORT extern glXSwapBuffersProc g_glXSwapBuffers;
GL_EXPORT extern glXCreateGLXPixmapProc g_glXCreateGLXPixmap;
GL_EXPORT extern glXDestroyGLXPixmapProc g_glXDestroyGLXPixmap;
GL_EXPORT extern glXQueryExtensionProc g_glXQueryExtension;
GL_EXPORT extern glXQueryVersionProc g_glXQueryVersion;
GL_EXPORT extern glXIsDirectProc g_glXIsDirect;
GL_EXPORT extern glXGetConfigProc g_glXGetConfig;
GL_EXPORT extern glXGetCurrentContextProc g_glXGetCurrentContext;
GL_EXPORT extern glXGetCurrentDrawableProc g_glXGetCurrentDrawable;
GL_EXPORT extern glXWaitGLProc g_glXWaitGL;
GL_EXPORT extern glXWaitXProc g_glXWaitX;
GL_EXPORT extern glXUseXFontProc g_glXUseXFont;
GL_EXPORT extern glXQueryExtensionsStringProc g_glXQueryExtensionsString;
GL_EXPORT extern glXQueryServerStringProc g_glXQueryServerString;
GL_EXPORT extern glXGetClientStringProc g_glXGetClientString;
GL_EXPORT extern glXGetCurrentDisplayProc g_glXGetCurrentDisplay;
GL_EXPORT extern glXChooseFBConfigProc g_glXChooseFBConfig;
GL_EXPORT extern glXGetFBConfigAttribProc g_glXGetFBConfigAttrib;
GL_EXPORT extern glXGetFBConfigsProc g_glXGetFBConfigs;
GL_EXPORT extern glXGetVisualFromFBConfigProc g_glXGetVisualFromFBConfig;
GL_EXPORT extern glXCreateWindowProc g_glXCreateWindow;
GL_EXPORT extern glXDestroyWindowProc g_glXDestroyWindow;
GL_EXPORT extern glXCreatePixmapProc g_glXCreatePixmap;
GL_EXPORT extern glXDestroyPixmapProc g_glXDestroyPixmap;
GL_EXPORT extern glXCreatePbufferProc g_glXCreatePbuffer;
GL_EXPORT extern glXDestroyPbufferProc g_glXDestroyPbuffer;
GL_EXPORT extern glXQueryDrawableProc g_glXQueryDrawable;
GL_EXPORT extern glXCreateNewContextProc g_glXCreateNewContext;
GL_EXPORT extern glXMakeContextCurrentProc g_glXMakeContextCurrent;
GL_EXPORT extern glXGetCurrentReadDrawableProc g_glXGetCurrentReadDrawable;
GL_EXPORT extern glXQueryContextProc g_glXQueryContext;
GL_EXPORT extern glXSelectEventProc g_glXSelectEvent;
GL_EXPORT extern glXGetSelectedEventProc g_glXGetSelectedEvent;
GL_EXPORT extern glXSwapIntervalEXTProc g_glXSwapIntervalEXT;
GL_EXPORT extern glXGetFBConfigFromVisualSGIXProc g_glXGetFBConfigFromVisualSGIX;
GL_EXPORT extern glXCreateContextAttribsARBProc g_glXCreateContextAttribsARB;

}  // namespace gfx

#define glXChooseVisual ::gfx::g_glXChooseVisual
#define glXCreateContext ::gfx::g_glXCreateContext
#define glXBindTexImageEXT ::gfx::g_glXBindTexImageEXT
#define glXReleaseTexImageEXT ::gfx::g_glXReleaseTexImageEXT
#define glXDestroyContext ::gfx::g_glXDestroyContext
#define glXMakeCurrent ::gfx::g_glXMakeCurrent
#define glXCopyContext ::gfx::g_glXCopyContext
#define glXSwapBuffers ::gfx::g_glXSwapBuffers
#define glXCreateGLXPixmap ::gfx::g_glXCreateGLXPixmap
#define glXDestroyGLXPixmap ::gfx::g_glXDestroyGLXPixmap
#define glXQueryExtension ::gfx::g_glXQueryExtension
#define glXQueryVersion ::gfx::g_glXQueryVersion
#define glXIsDirect ::gfx::g_glXIsDirect
#define glXGetConfig ::gfx::g_glXGetConfig
#define glXGetCurrentContext ::gfx::g_glXGetCurrentContext
#define glXGetCurrentDrawable ::gfx::g_glXGetCurrentDrawable
#define glXWaitGL ::gfx::g_glXWaitGL
#define glXWaitX ::gfx::g_glXWaitX
#define glXUseXFont ::gfx::g_glXUseXFont
#define glXQueryExtensionsString ::gfx::g_glXQueryExtensionsString
#define glXQueryServerString ::gfx::g_glXQueryServerString
#define glXGetClientString ::gfx::g_glXGetClientString
#define glXGetCurrentDisplay ::gfx::g_glXGetCurrentDisplay
#define glXChooseFBConfig ::gfx::g_glXChooseFBConfig
#define glXGetFBConfigAttrib ::gfx::g_glXGetFBConfigAttrib
#define glXGetFBConfigs ::gfx::g_glXGetFBConfigs
#define glXGetVisualFromFBConfig ::gfx::g_glXGetVisualFromFBConfig
#define glXCreateWindow ::gfx::g_glXCreateWindow
#define glXDestroyWindow ::gfx::g_glXDestroyWindow
#define glXCreatePixmap ::gfx::g_glXCreatePixmap
#define glXDestroyPixmap ::gfx::g_glXDestroyPixmap
#define glXCreatePbuffer ::gfx::g_glXCreatePbuffer
#define glXDestroyPbuffer ::gfx::g_glXDestroyPbuffer
#define glXQueryDrawable ::gfx::g_glXQueryDrawable
#define glXCreateNewContext ::gfx::g_glXCreateNewContext
#define glXMakeContextCurrent ::gfx::g_glXMakeContextCurrent
#define glXGetCurrentReadDrawable ::gfx::g_glXGetCurrentReadDrawable
#define glXQueryContext ::gfx::g_glXQueryContext
#define glXSelectEvent ::gfx::g_glXSelectEvent
#define glXGetSelectedEvent ::gfx::g_glXGetSelectedEvent
#define glXSwapIntervalEXT ::gfx::g_glXSwapIntervalEXT
#define glXGetFBConfigFromVisualSGIX ::gfx::g_glXGetFBConfigFromVisualSGIX
#define glXCreateContextAttribsARB ::gfx::g_glXCreateContextAttribsARB

#endif  //  UI_GFX_GL_GL_BINDINGS_AUTOGEN_GLX_H_
